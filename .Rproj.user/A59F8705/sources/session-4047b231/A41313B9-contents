---
title: "Identify and Visualize Potential Swaps in Longitudinal Weight Data"
author: "Nia Faith Lewis"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Identify and Visualize Potential Swaps in Longitudinal Weight Data}
  %\VignetteEngine{knitr::rmarkdown}
---

## Identify and Visualize Potential Swaps in Longitudinal Weight Data

This vignette will describe how to use the `identify_and_plot_swaps` function from the `cleanR` package. This function is designed to compare weight measurements between separate timepoints to identify potential swaps that might have occurred in the data, where the weight for one row was swapped for the weight for another row. It specifically works in datasets where the weight increases or is expected to increase over time by detecting where the weight in an earlier timepoint exceeds the weight in a later timepoint. 

It also provides user with a visualization of the results so that it is easier to see the potential swap that took place, rather than looking at huge swaths of numbers. 



## Function Overview

The `identify_and_plot_swaps` function:
- Flags rows where the weight in an earlier timepoint exceeds the weight in a later timepoint as a potential swap.
- Highlights flagged points in a line graph for easy visualization (plot saved under "/inst/extdata/swaps_plot").

### Parameters:
- `data`: A data frame containing the dataset.
- `weight_columns`: A character vector specifying the column names containing weight data for different timepoints.
- `key_column`: A character string specifying the column name used to identify rows (e.g., "pot_id").
- `plot_filename`: A character string specifying the filename for saving the plot (e.g., "swaps_plot.png").
- `weight_diff_threshold`: the minimum weight difference (in grams) that triggers a potential swap flag (user should consider the nature of their data to determine how much weight difference would indicate a potential swap)


### Output:
The function returns a list containing:
- `swaps`: A data frame of rows flagged as potential swaps.
- `plot`: A ggplot object visualizing the weights and flagged potential swaps.
- `saved_plot`: The path to the saved image file.

## Example

### Loading the Data

First, I load my example dataset:

```{r}
### Load library
library(cleanR)

data("plants_clean")

# Preview the data
head(plants_clean)
```

Identify and Visualize Potential Swaps

Now I can use the identify_and_plot_swaps function to identify potential swaps in the weight data:
```{r}
# Apply the identify_and_plot_swaps function
swaps_output <- identify_and_plot_swaps(
  data = plants_clean,
  weight_columns = c("X10_6_weight", "X10_9_weight"),  # Specify weight columns
  key_column = "pot_id",  # Specify key column
  plot_filename = "swaps_plot.png",  # Specify plot filename
  weight_diff_threshold = 100  # Specify threshold for weight difference to flag swaps
)


# View the flagged swaps
print(swaps_output$swaps)
```
Understanding the Output
The function will return a list that includes:

Swaps: The rows with flagged potential swaps, where earlier timepoints have greater weights than later ones.
Plot: A line plot showing the longitudinal weight data, with flagged points marked.
Saved Plot: The filename where the plot was saved -> "/cloud/project/cleanR/inst/extdata/swaps_plot" .

Example Plot
The function generates a plot where each line represents the weight data for a specific plant (identified by pot_id). Points flagged as potential swaps will have thicker line representing them, and a triangular point. 

![Example plot for Potential Swaps in the plants_clean dataset](/cloud/project/cleanR/inst/extdata/swaps_plot.png)

Conclusion
The identify_and_plot_swaps function is a useful for visualizing potential swaps in longitudinal data. 
